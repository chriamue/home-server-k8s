
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ldap
  name: ldap-service
  namespace: home-server
spec:
  ports:
    - name: ldap
      protocol: TCP
      port: 389
      targetPort: 389
    - name: ldaps
      protocol: TCP
      port: 636
      targetPort: 636
  selector:
    app: ldap
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ldap
  namespace: home-server
  labels:
    app: ldap
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: ldap
    spec:
      containers:
        - name: ldap
          image: osixia/openldap:1.2.3
          envFrom:
            - configMapRef:
                name: openldap-env
          volumeMounts:
            - name: ldap-data
              mountPath: /var/lib/ldap
            - name: ldap-config
              mountPath: /etc/ldap/slapd.d
            - name: ldap-certs
              mountPath: /container/service/slapd/assets/certs
            - name: container-run
              mountPath: /container/run
          ports:
            - name: ldap
              containerPort: 389
            - name: ldaps
              containerPort: 636
      volumes:
        - name: ldap-data
          hostPath:
            path: "/data/ldap/db"
        - name: ldap-config
          hostPath:
            path: "/data/ldap/config"
        - name: ldap-certs
          hostPath:
            path: "/data/ldap/certs"
        - name: container-run
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ldap
  name: ldap-account-manager
  namespace: home-server
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: ldap
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ldap-account-manager
  namespace: home-server
  labels:
    app: ldap
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: ldap
    spec:
      containers:
        - name: ldap-account-manager
          image: ldapaccountmanager/lam
          command: ["/bin/sh"]
          args: ["-c", "service apache2 start && sleep infinity"]
          ports:
            - name: lam
              containerPort: 80
              